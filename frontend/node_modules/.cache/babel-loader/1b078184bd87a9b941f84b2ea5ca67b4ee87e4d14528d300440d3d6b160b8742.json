{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState, useRef } from 'react';\nimport { CartContext } from '../CartContext';\nimport { useNavigate } from 'react-router-dom';\nimport { getUsers } from '../http';\nimport TakePhoto from '../components/TakePhoto';\nimport AudioRecord from '../components/AudioRecord';\nimport VideoWith from '../components/VideoWith';\nimport VideoWithout from '../components/VideoWithout';\nimport ScreenWith from '../components/ScreenWith';\nimport ScreenWithout from '../components/ScreenWithout';\nimport Loader from './../components/Loader';\nimport Alert from '../components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const [load, setLoad] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [value, setvalue] = useState('');\n  const {\n    formatDate,\n    formatTime,\n    user,\n    alt,\n    baseURL,\n    auth,\n    setUsers\n  } = useContext(CartContext);\n\n  // line capture values\n  let latitudeL = useRef([]);\n  let longitudeL = useRef([]);\n  let timeStampL = useRef([]);\n\n  // line capture values\n  let latitudeA = useRef([]);\n  let longitudeA = useRef([]);\n  let timeStampA = useRef([]);\n  let count = 0;\n\n  // other functions\n  const handleSS = async () => {\n    await navigator.mediaDevices.getDisplayMedia({\n      video: {\n        mediaSource: 'screen'\n      }\n    }).then(async mediaStreamObj => {\n      const video = document.querySelector(\".snapCtr\");\n      video.srcObject = mediaStreamObj;\n      // const audio = new Audio('/click.mp3');\n      let fileName = prompt(\"Enter file name\", \"my-image\");\n      setTimeout(() => {\n        // audio.play();\n        let canvas = document.createElement('canvas');\n        canvas.width = 921;\n        canvas.height = 518;\n        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n        const img = canvas.toDataURL('image/jpeg');\n        let date = formatDate();\n        let time = formatTime();\n        let lat, long;\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          console.log(pos.coords);\n          lat = pos.coords.latitude;\n          long = pos.coords.longitude;\n          let latitude = ['', lat.toString()];\n          let longitude = ['', long.toString()];\n          fetch(`${baseURL}/take-snap`, {\n            method: 'POST',\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            },\n            body: JSON.stringify({\n              img,\n              filename: fileName,\n              date,\n              time,\n              latitude,\n              longitude,\n              altitude: alt,\n              alias: auth.user.alias,\n              ip: user.ip,\n              iptype: user.iptype,\n              searchname: user.name,\n              searchtype: user.type,\n              searchversion: user.version,\n              devicebrand: user.device.brand,\n              devicetype: user.device.type,\n              devicename: user.device.name,\n              osname: user.os.name,\n              ostype: user.os.type\n            })\n          }).then(response => response.json()).then(data => console.log(data));\n        });\n        mediaStreamObj.getTracks().forEach(track => {\n          track.stop();\n        });\n        video.srcObject = null;\n      }, 5000);\n    });\n  };\n  const handleLine = async () => {\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      let lt = pos.coords.latitude;\n      let ln = pos.coords.longitude;\n      latitudeL.current.push(lt.toString());\n      longitudeL.current.push(ln.toString());\n      console.log(lt, ln);\n      let date = formatDate();\n      let time = formatTime();\n      timeStampL.current.push(`${date} ${time}`);\n      console.log(\"Point Captured\");\n      console.log(latitudeL.current.length);\n      // count++;\n      setvalue(`${latitudeL.length} Line Point Captured`);\n      setAlert(true);\n    });\n  };\n  const handleStop = async () => {\n    if (latitudeL.length !== 0) {\n      let fileName = prompt(\"Enter file name\", \"line-snap\");\n      let date = formatDate();\n      let time = formatTime();\n      if (latitudeL.length === 1) {\n        latitudeL.unshift('');\n        longitudeL.unshift('');\n        timeStampL.unshift('');\n      }\n      fetch(`${baseURL}/geo-snap`, {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          filename: fileName,\n          date,\n          time,\n          latitude: latitudeL,\n          longitude: longitudeL,\n          alias: auth.user.alias,\n          timestamp: timeStampL,\n          ip: user.ip,\n          filetype: \"line snap\",\n          iptype: user.iptype,\n          searchname: user.name,\n          searchtype: user.type,\n          searchversion: user.version,\n          devicebrand: user.device.brand,\n          devicetype: user.device.type,\n          devicename: user.device.name,\n          osname: user.os.name,\n          ostype: user.os.type\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        latitudeL = [];\n        longitudeL = [];\n        timeStampL = [];\n      });\n    } else {\n      console.log(\"Nothing is captured\");\n    }\n  };\n  useEffect(() => {\n    console.log(count);\n  }, [count]);\n  const handleArea = async () => {\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      let lt = pos.coords.latitude;\n      let ln = pos.coords.longitude;\n      latitudeA.push(lt.toString());\n      longitudeA.push(ln.toString());\n      let date = formatDate();\n      let time = formatTime();\n      timeStampA.push(`${date} ${time}`);\n      console.log(\"Point Captured\");\n      setvalue(`${latitudeL.length} Area Point Captured`);\n      setAlert(true);\n    });\n  };\n  const handleStop2 = async () => {\n    if (latitudeA.length !== 0) {\n      let fileName = prompt(\"Enter file name\", \"area-snap\");\n      latitudeA.push(latitudeA[0]);\n      longitudeA.push(longitudeA[0]);\n      let date = formatDate();\n      let time = formatTime();\n      timeStampA.push(`${date} ${time}`);\n      fetch(`${baseURL}/geo-snap`, {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          filename: fileName,\n          date,\n          time,\n          latitude: latitudeA,\n          longitude: longitudeA,\n          alias: auth.user.alias,\n          timestamp: timeStampA,\n          ip: user.ip,\n          filetype: \"area snap\",\n          iptype: user.iptype,\n          searchname: user.name,\n          searchtype: user.type,\n          searchversion: user.version,\n          devicebrand: user.device.brand,\n          devicetype: user.device.type,\n          devicename: user.device.name,\n          osname: user.os.name,\n          ostype: user.os.type\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        latitudeA = [];\n        longitudeA = [];\n        timeStampA = [];\n      });\n    } else {\n      console.log(\"Nothing is captured\");\n    }\n  };\n\n  // setTimeout(() => {\n  //     setAlert(false);\n  // }, 3000);\n\n  const handleMySnaps = () => {\n    navigate(\"/mysnaps\");\n  };\n  const handleUsers = async () => {\n    setLoad(true);\n    try {\n      const token = JSON.parse(localStorage.getItem(\"smtoken\"));\n      // console.log(token);\n      if (token !== null) {\n        const {\n          data\n        } = await getUsers({\n          token\n        });\n        console.log(data.allAlias);\n        setUsers(data.allAlias);\n        setLoad(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    navigate(\"/adminusers\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/logo2.png\",\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alias-code\",\n          children: [\"Alias Code - \", auth.user.alias]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss\",\n          onClick: handleSS,\n          children: \"Screenshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"line-snap\",\n          children: \"Line Snap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snap-box1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleLine,\n            children: \"Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleStop,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"area-snap\",\n          children: \"Area Snap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snap-box1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleArea,\n            children: \"Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleStop2,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"alias recording\",\n          onClick: handleMySnaps,\n          children: \"My Snaps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), auth.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"users\",\n          onClick: handleUsers,\n          children: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-sec\",\n        children: load ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snap-sec\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Take Snap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"video\", {\n                autoPlay: true,\n                className: \"snapCtr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TakePhoto, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AudioRecord, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(VideoWithout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(VideoWith, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ScreenWithout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ScreenWith, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"\\xA9 2022 THE GREEN BRIDGE Ingenieurgesellschaft mbH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"pm1jS0MhbIrrNyn+8GFxs4Fi8TY=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useContext","useEffect","useState","useRef","CartContext","useNavigate","getUsers","TakePhoto","AudioRecord","VideoWith","VideoWithout","ScreenWith","ScreenWithout","Loader","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","navigate","load","setLoad","alert","setAlert","value","setvalue","formatDate","formatTime","user","alt","baseURL","auth","setUsers","latitudeL","longitudeL","timeStampL","latitudeA","longitudeA","timeStampA","count","handleSS","navigator","mediaDevices","getDisplayMedia","video","mediaSource","then","mediaStreamObj","document","querySelector","srcObject","fileName","prompt","setTimeout","canvas","createElement","width","height","getContext","drawImage","img","toDataURL","date","time","lat","long","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","toString","fetch","method","headers","body","JSON","stringify","filename","altitude","alias","ip","iptype","searchname","name","searchtype","type","searchversion","version","devicebrand","device","brand","devicetype","devicename","osname","os","ostype","response","json","data","getTracks","forEach","track","stop","handleLine","lt","ln","current","push","length","handleStop","unshift","timestamp","filetype","handleArea","handleStop2","handleMySnaps","handleUsers","token","parse","localStorage","getItem","allAlias","err","children","className","src","_jsxFileName","lineNumber","columnNumber","onClick","isAdmin","autoPlay","_c","$RefreshReg$"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/pages/Home.js"],"sourcesContent":["import { useContext, useEffect, useState, useRef } from 'react';\r\nimport { CartContext } from '../CartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { getUsers } from '../http';\r\n\r\nimport TakePhoto from '../components/TakePhoto';\r\nimport AudioRecord from '../components/AudioRecord';\r\nimport VideoWith from '../components/VideoWith';\r\nimport VideoWithout from '../components/VideoWithout';\r\nimport ScreenWith from '../components/ScreenWith';\r\nimport ScreenWithout from '../components/ScreenWithout';\r\n\r\nimport Loader from './../components/Loader';\r\nimport Alert from '../components/Alert';\r\n\r\nconst Home = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [load, setLoad] = useState(false);\r\n    const [alert, setAlert] = useState(false);\r\n    const [value, setvalue] = useState('');\r\n    const { formatDate, formatTime, user, alt, baseURL, auth, setUsers } = useContext(CartContext);\r\n   \r\n    // line capture values\r\n    let latitudeL = useRef([]);\r\n    let longitudeL = useRef([]);\r\n    let timeStampL = useRef([]);\r\n\r\n\r\n    // line capture values\r\n    let latitudeA = useRef([]);\r\n    let longitudeA = useRef([]);\r\n    let timeStampA = useRef([]);\r\n\r\n    let count = 0;\r\n\r\n\r\n\r\n    // other functions\r\n    const handleSS = async () => {\r\n        await navigator.mediaDevices.getDisplayMedia({\r\n            video: {\r\n                mediaSource: 'screen',\r\n            }\r\n        }).then(async (mediaStreamObj) => {\r\n            const video = document.querySelector(\".snapCtr\");\r\n            video.srcObject = mediaStreamObj;\r\n            // const audio = new Audio('/click.mp3');\r\n            let fileName = prompt(\"Enter file name\", \"my-image\");\r\n            setTimeout(() => {\r\n                // audio.play();\r\n                let canvas = document.createElement('canvas');\r\n                canvas.width = 921;\r\n                canvas.height = 518;\r\n                canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                const img = canvas.toDataURL('image/jpeg')\r\n\r\n                let date = formatDate();\r\n                let time = formatTime();\r\n                let lat, long;\r\n\r\n                navigator.geolocation.getCurrentPosition(function (pos) {\r\n                    console.log(pos.coords)\r\n                    lat = pos.coords.latitude;\r\n                    long = pos.coords.longitude;\r\n\r\n                    let latitude = ['', lat.toString()];\r\n                    let longitude = ['', long.toString()];\r\n\r\n                    fetch(`${baseURL}/take-snap`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            \"Content-type\": \"application/json; charset=UTF-8\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            img, filename: fileName, date, time, latitude, longitude, altitude: alt, alias: auth.user.alias,\r\n                            ip: user.ip,\r\n                            iptype: user.iptype,\r\n                            searchname: user.name,\r\n                            searchtype: user.type,\r\n                            searchversion: user.version,\r\n                            devicebrand: user.device.brand,\r\n                            devicetype: user.device.type,\r\n                            devicename: user.device.name,\r\n                            osname: user.os.name,\r\n                            ostype: user.os.type,\r\n                        })\r\n                    }).then((response) => response.json())\r\n                        .then((data) => console.log(data));\r\n\r\n                });\r\n\r\n\r\n                mediaStreamObj.getTracks().forEach((track) => {\r\n                    track.stop();\r\n                });\r\n                video.srcObject = null;\r\n\r\n            }, 5000);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleLine = async () => {\r\n        navigator.geolocation.getCurrentPosition(function (pos) {\r\n            let lt = pos.coords.latitude;\r\n            let ln = pos.coords.longitude;\r\n            latitudeL.current.push(lt.toString());\r\n            longitudeL.current.push(ln.toString());\r\n            console.log(lt, ln);\r\n            let date = formatDate();\r\n            let time = formatTime();\r\n            timeStampL.current.push(`${date} ${time}`);\r\n            console.log(\"Point Captured\")\r\n            console.log(latitudeL.current.length)\r\n            // count++;\r\n            setvalue(`${latitudeL.length} Line Point Captured`);\r\n            setAlert(true);\r\n        })\r\n    }\r\n    const handleStop = async () => {\r\n        if (latitudeL.length !== 0) {\r\n            let fileName = prompt(\"Enter file name\", \"line-snap\");\r\n            let date = formatDate();\r\n            let time = formatTime();\r\n\r\n            if (latitudeL.length === 1) {\r\n                latitudeL.unshift('');\r\n                longitudeL.unshift('');\r\n                timeStampL.unshift('');\r\n            }\r\n\r\n            fetch(`${baseURL}/geo-snap`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                },\r\n                body: JSON.stringify({\r\n                    filename: fileName, date, time, latitude: latitudeL, longitude: longitudeL, alias: auth.user.alias, timestamp: timeStampL,\r\n                    ip: user.ip,\r\n                    filetype: \"line snap\",\r\n                    iptype: user.iptype,\r\n                    searchname: user.name,\r\n                    searchtype: user.type,\r\n                    searchversion: user.version,\r\n                    devicebrand: user.device.brand,\r\n                    devicetype: user.device.type,\r\n                    devicename: user.device.name,\r\n                    osname: user.os.name,\r\n                    ostype: user.os.type,\r\n                })\r\n            }).then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    latitudeL = [];\r\n                    longitudeL = [];\r\n                    timeStampL = [];\r\n                });\r\n        } else {\r\n            console.log(\"Nothing is captured\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(count);\r\n    }, [count])\r\n\r\n\r\n\r\n\r\n    const handleArea = async () => {\r\n        navigator.geolocation.getCurrentPosition(function (pos) {\r\n            let lt = pos.coords.latitude;\r\n            let ln = pos.coords.longitude;\r\n            latitudeA.push(lt.toString());\r\n            longitudeA.push(ln.toString());\r\n            let date = formatDate();\r\n            let time = formatTime();\r\n            timeStampA.push(`${date} ${time}`);\r\n            console.log(\"Point Captured\")\r\n            setvalue(`${latitudeL.length} Area Point Captured`);\r\n            setAlert(true);\r\n        })\r\n    }\r\n    const handleStop2 = async () => {\r\n        if (latitudeA.length !== 0) {\r\n            let fileName = prompt(\"Enter file name\", \"area-snap\");\r\n            latitudeA.push(latitudeA[0]);\r\n            longitudeA.push(longitudeA[0]);\r\n            let date = formatDate();\r\n            let time = formatTime();\r\n            timeStampA.push(`${date} ${time}`);\r\n            fetch(`${baseURL}/geo-snap`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                },\r\n                body: JSON.stringify({\r\n                    filename: fileName, date, time, latitude: latitudeA, longitude: longitudeA, alias: auth.user.alias, timestamp: timeStampA,\r\n                    ip: user.ip,\r\n                    filetype: \"area snap\",\r\n                    iptype: user.iptype,\r\n                    searchname: user.name,\r\n                    searchtype: user.type,\r\n                    searchversion: user.version,\r\n                    devicebrand: user.device.brand,\r\n                    devicetype: user.device.type,\r\n                    devicename: user.device.name,\r\n                    osname: user.os.name,\r\n                    ostype: user.os.type,\r\n                })\r\n            }).then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    latitudeA = [];\r\n                    longitudeA = [];\r\n                    timeStampA = [];\r\n                });\r\n        } else {\r\n            console.log(\"Nothing is captured\");\r\n        }\r\n    }\r\n\r\n\r\n    // setTimeout(() => {\r\n    //     setAlert(false);\r\n    // }, 3000);\r\n\r\n\r\n    const handleMySnaps = () => {\r\n        navigate(\"/mysnaps\");\r\n    }\r\n    const handleUsers = async () => {\r\n        setLoad(true);\r\n        try {\r\n            const token = JSON.parse(localStorage.getItem(\"smtoken\"));\r\n            // console.log(token);\r\n            if (token !== null) {\r\n                const { data } = await getUsers({ token });\r\n                console.log(data.allAlias);\r\n                setUsers(data.allAlias);\r\n                setLoad(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        navigate(\"/adminusers\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {alert ? <Alert text={value} /> : \"\"} */}\r\n            <div className=\"container\">\r\n                <div className=\"btns\">\r\n                    <img src=\"images/logo2.png\" alt=\"logo\" className='logo' />\r\n                    <p className=\"alias-code\">Alias Code - {auth.user.alias}</p>\r\n                    <button className=\"ss\" onClick={handleSS}>Screenshot</button>\r\n                    <button className=\"line-snap\">Line Snap</button>\r\n                    <div className=\"snap-box1\">\r\n                        <span onClick={handleLine}>Capture</span>\r\n                        <span onClick={handleStop}>Save</span>\r\n                    </div>\r\n                    <button className=\"area-snap\">Area Snap</button>\r\n                    <div className=\"snap-box1\">\r\n                        <span onClick={handleArea}>Capture</span>\r\n                        <span onClick={handleStop2}>Save</span>\r\n                    </div>\r\n                    <button className=\"alias recording\" onClick={handleMySnaps}>My Snaps</button>\r\n                    {auth.isAdmin && <button className=\"users\" onClick={handleUsers}>All Users</button>}\r\n                </div>\r\n                <div className=\"main-sec\">\r\n                    {\r\n                        load ?\r\n                            <Loader />\r\n                            :\r\n                            <>\r\n                                <div className=\"snap-sec\">\r\n                                    <h3>Take Snap</h3>\r\n                                    <div>\r\n                                        <video autoPlay className=\"snapCtr\"></video>\r\n                                    </div>\r\n                                </div>\r\n                                <TakePhoto />\r\n                                <AudioRecord />\r\n                                <VideoWithout />\r\n                                <VideoWith />\r\n                                <ScreenWithout />\r\n                                <ScreenWith />\r\n                            </>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <footer>\r\n                © 2022 THE GREEN BRIDGE Ingenieurgesellschaft mbH\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}