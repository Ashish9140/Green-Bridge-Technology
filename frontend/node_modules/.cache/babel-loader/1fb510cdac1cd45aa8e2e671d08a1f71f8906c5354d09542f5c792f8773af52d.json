{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\nimport { CartContext } from \"../CartContext\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OSMMap = () => {\n  _s();\n  const {\n    targetpoint\n  } = useContext(CartContext);\n  const [map, setMap] = useState(null);\n  const markerRef = useRef(null);\n  const lineRef = useRef(null);\n  useEffect(() => {\n    const latitude = parseFloat(targetpoint.latitude);\n    const longitude = parseFloat(targetpoint.longitude);\n    if (!map) {\n      const osmMap = L.map('map').setView([latitude, longitude], 18);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 40\n      }).addTo(osmMap);\n      setMap(osmMap);\n      const customIcon = L.icon({\n        iconUrl: \"/images/marker.png\",\n        iconSize: [50, 50],\n        iconAnchor: [16, 32]\n      });\n      const targetMarker = L.marker([latitude, longitude], {\n        icon: customIcon\n      });\n      markerRef.current = targetMarker;\n      targetMarker.addTo(osmMap);\n    } else {\n      map.setView([latitude, longitude], 18);\n      if (markerRef.current) {\n        markerRef.current.setLatLng([latitude, longitude]);\n      } else {\n        const customIcon = L.icon({\n          iconUrl: \"/images/marker.png\",\n          iconSize: [50, 50],\n          iconAnchor: [16, 32]\n        });\n        const targetMarker = L.marker([latitude, longitude], {\n          icon: customIcon\n        });\n        markerRef.current = targetMarker;\n        targetMarker.addTo(map);\n      }\n    }\n  }, [targetpoint, map]);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n        if (map) {\n          if (lineRef.current) {\n            map.removeLayer(lineRef.current);\n          }\n          const line = L.polyline([[userLat, userLng], [targetpoint.latitude, targetpoint.longitude]], {\n            color: 'blue'\n          }).addTo(map);\n          lineRef.current = line;\n        }\n      });\n    }\n  }, [map, targetpoint]);\n  useEffect(() => {\n    return () => {\n      if (map) {\n        map.remove();\n      }\n    };\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"600px\",\n        width: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(OSMMap, \"617zDzMQxhzIoD+stb+540swpF0=\");\n_c = OSMMap;\nexport default OSMMap;\nvar _c;\n$RefreshReg$(_c, \"OSMMap\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useRef","CartContext","L","jsxDEV","_jsxDEV","OSMMap","_s","targetpoint","map","setMap","markerRef","lineRef","latitude","parseFloat","longitude","osmMap","setView","tileLayer","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","targetMarker","marker","current","setLatLng","navigator","geolocation","getCurrentPosition","position","userLat","coords","userLng","removeLayer","line","polyline","color","remove","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport { CartContext } from \"../CartContext\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst OSMMap = () => {\r\n    const { targetpoint } = useContext(CartContext);\r\n    const [map, setMap] = useState(null);\r\n    const markerRef = useRef(null);\r\n    const lineRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const latitude = parseFloat(targetpoint.latitude);\r\n        const longitude = parseFloat(targetpoint.longitude);\r\n\r\n        if (!map) {\r\n            const osmMap = L.map('map').setView([latitude, longitude], 18);\r\n\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                maxZoom: 40,\r\n            }).addTo(osmMap);\r\n\r\n            setMap(osmMap);\r\n\r\n            const customIcon = L.icon({\r\n                iconUrl: \"/images/marker.png\",\r\n                iconSize: [50, 50],\r\n                iconAnchor: [16, 32],\r\n            });\r\n\r\n            const targetMarker = L.marker([latitude, longitude], { icon: customIcon });\r\n            markerRef.current = targetMarker;\r\n\r\n            targetMarker.addTo(osmMap);\r\n\r\n        } else {\r\n            map.setView([latitude, longitude], 18);\r\n\r\n            if (markerRef.current) {\r\n                markerRef.current.setLatLng([latitude, longitude]);\r\n            } else {\r\n                const customIcon = L.icon({\r\n                    iconUrl: \"/images/marker.png\",\r\n                    iconSize: [50, 50],\r\n                    iconAnchor: [16, 32],\r\n                });\r\n\r\n                const targetMarker = L.marker([latitude, longitude], { icon: customIcon });\r\n                markerRef.current = targetMarker;\r\n                targetMarker.addTo(map);\r\n            }\r\n        }\r\n    }, [targetpoint, map]);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const userLat = position.coords.latitude;\r\n                const userLng = position.coords.longitude;\r\n\r\n                if (map) {\r\n                    if (lineRef.current) {\r\n                        map.removeLayer(lineRef.current);\r\n                    }\r\n\r\n                    const line = L.polyline([[userLat, userLng], [targetpoint.latitude, targetpoint.longitude]], {\r\n                        color: 'blue',\r\n                    }).addTo(map);\r\n\r\n                    lineRef.current = line;\r\n                }\r\n            });\r\n        }\r\n    }, [map, targetpoint]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (map) {\r\n                map.remove();\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{ height: \"600px\", width: \"400px\" }}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OSMMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}