{"ast":null,"code":"import _slicedToArray from\"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useContext,useState}from\"react\";import{CartContext}from\"../CartContext\";import L from\"leaflet\";import\"leaflet/dist/leaflet.css\";import haversine from\"haversine-distance\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OSMMap=function OSMMap(){var _useContext=useContext(CartContext),targetpoint=_useContext.targetpoint,setTargetpoint=_useContext.setTargetpoint;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),distance=_useState4[0],setDistance=_useState4[1];useEffect(function(){console.log(distance);},[distance]);useEffect(function(){var latitude=parseFloat(targetpoint.latitude);var longitude=parseFloat(targetpoint.longitude);if(!map){var osmMap=L.map(\"map\").setView([latitude,longitude],18);L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",{maxZoom:40}).addTo(osmMap);setMap(osmMap);}else{map.setView([latitude,longitude],20);}},[targetpoint,map]);useEffect(function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){var userLat=position.coords.latitude;var userLng=position.coords.longitude;var userLocation={latitude:userLat,longitude:userLng};var customIcon=L.divIcon({className:\"custom-marker\",html:\"<div class=\\\"marker-label\\\">\".concat(2,\"</div>\"),iconSize:[30,30]});if(map){if(map.userMarker){map.userMarker.setLatLng([userLat,userLng]);map.userMarker.getPopup().setContent(\"Current Point: \".concat(userLat,\", \").concat(userLng));}else{var userMarker=L.marker([userLat,userLng],{icon:L.divIcon({className:\"custom-marker\",html:\"<div class=\\\"marker-label\\\">\".concat(2,\"</div>\"),iconSize:[30,30]})}).addTo(map);userMarker.bindPopup(\"Current Point: \".concat(userLat,\", \").concat(userLng)).openPopup();map.userMarker=userMarker;}var targetLat=parseFloat(targetpoint.latitude);var targetLng=parseFloat(targetpoint.longitude);var targetLocation={latitude:targetLat,longitude:targetLng};var radian=Math.PI/180;var dLat=(targetLat-userLat)*radian;var dLng=(targetLng-userLng)*radian;var a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(userLat*radian)*Math.cos(targetLat*radian)*Math.sin(dLng/2)*Math.sin(dLng/2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));var earthRadius=6371;// Earth's radius in kilometers (mean value)\nvar distanceInKilometers=earthRadius*c;var distanceInMeters=distanceInKilometers*1000;// Convert to meters\nvar formattedDistance;if(distanceInMeters>1000){var _distanceInKilometers=(distanceInMeters/1000).toFixed(2);// Convert to kilometers and round to 2 decimal places\nformattedDistance=\"\".concat(_distanceInKilometers,\" kilometer\");}else{formattedDistance=\"\".concat(Math.round(distanceInMeters),\" meter\");}setDistance(formattedDistance);if(map.targetMarker){map.targetMarker.setLatLng([targetLat,targetLng]);map.targetMarker.getPopup().setContent(\"Target Point: \".concat(targetLat,\", \").concat(targetLng));}else{var targetMarker=L.marker([targetLat,targetLng],{icon:L.divIcon({className:\"custom-marker\",html:\"<div class=\\\"marker-label\\\">\".concat(1,\"</div>\"),iconSize:[30,30]})}).addTo(map);targetMarker.bindPopup(\"Target Point: \".concat(targetLat,\", \").concat(targetLng)).openPopup();map.targetMarker=targetMarker;}if(map.line){map.removeLayer(map.line);}var line=L.polyline([[userLat,userLng],[targetLat,targetLng]],{color:\"blue\"});line.addTo(map);map.line=line;}});}},[map,targetpoint]);useEffect(function(){return function(){if(map){map.remove();}};},[map]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"map\",style:{height:\"600px\",width:\"400px\"}}),/*#__PURE__*/_jsx(\"span\",{className:\"dist\",children:distance}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n                .custom-marker {\\n                    display: flex;\\n                    justify-content: center;\\n                    align-items: center;\\n                    background-color: #007bff;\\n                    color: #fff;\\n                    border-radius: 50%;\\n                    width: 30px;\\n                    height: 30px;\\n                }\\n                .marker-label {\\n                    font-size: 14px;\\n                    font-weight: bold;\\n                }\\n                .dist{\\n                    background-color: #007bff;\\n                    color: #fff;\\n                    padding: 2px;\\n                }\\n                \"})]});};export default OSMMap;","map":{"version":3,"names":["React","useEffect","useContext","useState","CartContext","L","haversine","jsx","_jsx","jsxs","_jsxs","OSMMap","_useContext","targetpoint","setTargetpoint","_useState","_useState2","_slicedToArray","map","setMap","_useState3","_useState4","distance","setDistance","console","log","latitude","parseFloat","longitude","osmMap","setView","tileLayer","maxZoom","addTo","navigator","geolocation","getCurrentPosition","position","userLat","coords","userLng","userLocation","customIcon","divIcon","className","html","concat","iconSize","userMarker","setLatLng","getPopup","setContent","marker","icon","bindPopup","openPopup","targetLat","targetLng","targetLocation","radian","Math","PI","dLat","dLng","a","sin","cos","c","atan2","sqrt","earthRadius","distanceInKilometers","distanceInMeters","formattedDistance","toFixed","round","targetMarker","line","removeLayer","polyline","color","remove","children","id","style","height","width"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { CartContext } from \"../CartContext\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport haversine from \"haversine-distance\";\r\n\r\nconst OSMMap = () => {\r\n    const { targetpoint, setTargetpoint } = useContext(CartContext);\r\n    const [map, setMap] = useState(null);\r\n    const [distance, setDistance] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(distance);\r\n    }, [distance])\r\n\r\n    useEffect(() => {\r\n        const latitude = parseFloat(targetpoint.latitude);\r\n        const longitude = parseFloat(targetpoint.longitude);\r\n\r\n        if (!map) {\r\n            const osmMap = L.map(\"map\").setView([latitude, longitude], 18);\r\n\r\n            L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n                maxZoom: 40,\r\n            }).addTo(osmMap);\r\n\r\n            setMap(osmMap);\r\n        } else {\r\n            map.setView([latitude, longitude], 20);\r\n        }\r\n    }, [targetpoint, map]);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const userLat = position.coords.latitude;\r\n                const userLng = position.coords.longitude;\r\n                const userLocation = { latitude: userLat, longitude: userLng };\r\n\r\n                const customIcon = L.divIcon({\r\n                    className: \"custom-marker\",\r\n                    html: `<div class=\"marker-label\">${2}</div>`,\r\n                    iconSize: [30, 30],\r\n                });\r\n\r\n                if (map) {\r\n                    if (map.userMarker) {\r\n                        map.userMarker.setLatLng([userLat, userLng]);\r\n                        map.userMarker.getPopup().setContent(`Current Point: ${userLat}, ${userLng}`);\r\n                    } else {\r\n                        const userMarker = L.marker([userLat, userLng], {\r\n                            icon: L.divIcon({\r\n                                className: \"custom-marker\",\r\n                                html: `<div class=\"marker-label\">${2}</div>`,\r\n                                iconSize: [30, 30],\r\n                            }),\r\n                        }).addTo(map);\r\n                        userMarker.bindPopup(`Current Point: ${userLat}, ${userLng}`).openPopup();\r\n                        map.userMarker = userMarker;\r\n                    }\r\n\r\n                    const targetLat = parseFloat(targetpoint.latitude);\r\n                    const targetLng = parseFloat(targetpoint.longitude);\r\n                    const targetLocation = { latitude: targetLat, longitude: targetLng };\r\n\r\n\r\n                    const radian = Math.PI / 180;\r\n\r\n                    const dLat = (targetLat - userLat) * radian;\r\n                    const dLng = (targetLng - userLng) * radian;\r\n                    \r\n                    const a =\r\n                      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n                      Math.cos(userLat * radian) * Math.cos(targetLat * radian) *\r\n                      Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n                    \r\n                    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n                    \r\n                    const earthRadius = 6371; // Earth's radius in kilometers (mean value)\r\n                    const distanceInKilometers = earthRadius * c;\r\n                    const distanceInMeters = distanceInKilometers * 1000; // Convert to meters\r\n                    \r\n                    let formattedDistance;\r\n                    \r\n                    if (distanceInMeters > 1000) {\r\n                      const distanceInKilometers = (distanceInMeters / 1000).toFixed(2); // Convert to kilometers and round to 2 decimal places\r\n                      formattedDistance = `${distanceInKilometers} kilometer`;\r\n                    } else {\r\n                      formattedDistance = `${Math.round(distanceInMeters)} meter`;\r\n                    }\r\n                    \r\n                    setDistance(formattedDistance);\r\n \r\n                    if (map.targetMarker) {\r\n                        map.targetMarker.setLatLng([targetLat, targetLng]);\r\n                        map.targetMarker.getPopup().setContent(`Target Point: ${targetLat}, ${targetLng}`);\r\n                    } else {\r\n                        const targetMarker = L.marker([targetLat, targetLng], {\r\n                            icon: L.divIcon({\r\n                                className: \"custom-marker\",\r\n                                html: `<div class=\"marker-label\">${1}</div>`,\r\n                                iconSize: [30, 30],\r\n                            }),\r\n                        }).addTo(map);\r\n                        targetMarker.bindPopup(`Target Point: ${targetLat}, ${targetLng}`).openPopup();\r\n                        map.targetMarker = targetMarker;\r\n                    }\r\n\r\n                    if (map.line) {\r\n                        map.removeLayer(map.line);\r\n                    }\r\n\r\n                    const line = L.polyline(\r\n                        [\r\n                            [userLat, userLng],\r\n                            [targetLat, targetLng],\r\n                        ],\r\n                        {\r\n                            color: \"blue\",\r\n                        }\r\n                    );\r\n\r\n                    line.addTo(map);\r\n                    map.line = line;\r\n                }\r\n            });\r\n        }\r\n    }, [map, targetpoint]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (map) {\r\n                map.remove();\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{ height: \"600px\", width: \"400px\" }}></div>\r\n            <span className=\"dist\">{distance}</span>\r\n            <style>\r\n                {`\r\n                .custom-marker {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    background-color: #007bff;\r\n                    color: #fff;\r\n                    border-radius: 50%;\r\n                    width: 30px;\r\n                    height: 30px;\r\n                }\r\n                .marker-label {\r\n                    font-size: 14px;\r\n                    font-weight: bold;\r\n                }\r\n                .dist{\r\n                    background-color: #007bff;\r\n                    color: #fff;\r\n                    padding: 2px;\r\n                }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OSMMap;\r\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,MAAO,CAAAC,CAAC,KAAM,SAAS,CACvB,MAAO,0BAA0B,CACjC,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACjB,IAAAC,WAAA,CAAwCV,UAAU,CAACE,WAAW,CAAC,CAAvDS,WAAW,CAAAD,WAAA,CAAXC,WAAW,CAAEC,cAAc,CAAAF,WAAA,CAAdE,cAAc,CACnC,IAAAC,SAAA,CAAsBZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,GAAG,CAAAF,UAAA,IAAEG,MAAM,CAAAH,UAAA,IAClB,IAAAI,UAAA,CAAgCjB,QAAQ,CAAC,IAAI,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAG5BpB,SAAS,CAAC,UAAM,CACZuB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CACzB,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEdrB,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAyB,QAAQ,CAAGC,UAAU,CAACd,WAAW,CAACa,QAAQ,CAAC,CACjD,GAAM,CAAAE,SAAS,CAAGD,UAAU,CAACd,WAAW,CAACe,SAAS,CAAC,CAEnD,GAAI,CAACV,GAAG,CAAE,CACN,GAAM,CAAAW,MAAM,CAAGxB,CAAC,CAACa,GAAG,CAAC,KAAK,CAAC,CAACY,OAAO,CAAC,CAACJ,QAAQ,CAAEE,SAAS,CAAC,CAAE,EAAE,CAAC,CAE9DvB,CAAC,CAAC0B,SAAS,CAAC,oDAAoD,CAAE,CAC9DC,OAAO,CAAE,EACb,CAAC,CAAC,CAACC,KAAK,CAACJ,MAAM,CAAC,CAEhBV,MAAM,CAACU,MAAM,CAAC,CAClB,CAAC,IAAM,CACHX,GAAG,CAACY,OAAO,CAAC,CAACJ,QAAQ,CAAEE,SAAS,CAAC,CAAE,EAAE,CAAC,CAC1C,CACJ,CAAC,CAAE,CAACf,WAAW,CAAEK,GAAG,CAAC,CAAC,CAEtBjB,SAAS,CAAC,UAAM,CACZ,GAAIiC,SAAS,CAACC,WAAW,CAAE,CACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,SAACC,QAAQ,CAAK,CACnD,GAAM,CAAAC,OAAO,CAAGD,QAAQ,CAACE,MAAM,CAACb,QAAQ,CACxC,GAAM,CAAAc,OAAO,CAAGH,QAAQ,CAACE,MAAM,CAACX,SAAS,CACzC,GAAM,CAAAa,YAAY,CAAG,CAAEf,QAAQ,CAAEY,OAAO,CAAEV,SAAS,CAAEY,OAAQ,CAAC,CAE9D,GAAM,CAAAE,UAAU,CAAGrC,CAAC,CAACsC,OAAO,CAAC,CACzBC,SAAS,CAAE,eAAe,CAC1BC,IAAI,gCAAAC,MAAA,CAA+B,CAAC,UAAQ,CAC5CC,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CACrB,CAAC,CAAC,CAEF,GAAI7B,GAAG,CAAE,CACL,GAAIA,GAAG,CAAC8B,UAAU,CAAE,CAChB9B,GAAG,CAAC8B,UAAU,CAACC,SAAS,CAAC,CAACX,OAAO,CAAEE,OAAO,CAAC,CAAC,CAC5CtB,GAAG,CAAC8B,UAAU,CAACE,QAAQ,CAAC,CAAC,CAACC,UAAU,mBAAAL,MAAA,CAAmBR,OAAO,OAAAQ,MAAA,CAAKN,OAAO,CAAE,CAAC,CACjF,CAAC,IAAM,CACH,GAAM,CAAAQ,UAAU,CAAG3C,CAAC,CAAC+C,MAAM,CAAC,CAACd,OAAO,CAAEE,OAAO,CAAC,CAAE,CAC5Ca,IAAI,CAAEhD,CAAC,CAACsC,OAAO,CAAC,CACZC,SAAS,CAAE,eAAe,CAC1BC,IAAI,gCAAAC,MAAA,CAA+B,CAAC,UAAQ,CAC5CC,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CACrB,CAAC,CACL,CAAC,CAAC,CAACd,KAAK,CAACf,GAAG,CAAC,CACb8B,UAAU,CAACM,SAAS,mBAAAR,MAAA,CAAmBR,OAAO,OAAAQ,MAAA,CAAKN,OAAO,CAAE,CAAC,CAACe,SAAS,CAAC,CAAC,CACzErC,GAAG,CAAC8B,UAAU,CAAGA,UAAU,CAC/B,CAEA,GAAM,CAAAQ,SAAS,CAAG7B,UAAU,CAACd,WAAW,CAACa,QAAQ,CAAC,CAClD,GAAM,CAAA+B,SAAS,CAAG9B,UAAU,CAACd,WAAW,CAACe,SAAS,CAAC,CACnD,GAAM,CAAA8B,cAAc,CAAG,CAAEhC,QAAQ,CAAE8B,SAAS,CAAE5B,SAAS,CAAE6B,SAAU,CAAC,CAGpE,GAAM,CAAAE,MAAM,CAAGC,IAAI,CAACC,EAAE,CAAG,GAAG,CAE5B,GAAM,CAAAC,IAAI,CAAG,CAACN,SAAS,CAAGlB,OAAO,EAAIqB,MAAM,CAC3C,GAAM,CAAAI,IAAI,CAAG,CAACN,SAAS,CAAGjB,OAAO,EAAImB,MAAM,CAE3C,GAAM,CAAAK,CAAC,CACLJ,IAAI,CAACK,GAAG,CAACH,IAAI,CAAG,CAAC,CAAC,CAAGF,IAAI,CAACK,GAAG,CAACH,IAAI,CAAG,CAAC,CAAC,CACvCF,IAAI,CAACM,GAAG,CAAC5B,OAAO,CAAGqB,MAAM,CAAC,CAAGC,IAAI,CAACM,GAAG,CAACV,SAAS,CAAGG,MAAM,CAAC,CACzDC,IAAI,CAACK,GAAG,CAACF,IAAI,CAAG,CAAC,CAAC,CAAGH,IAAI,CAACK,GAAG,CAACF,IAAI,CAAG,CAAC,CAAC,CAEzC,GAAM,CAAAI,CAAC,CAAG,CAAC,CAAGP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACS,IAAI,CAACL,CAAC,CAAC,CAAEJ,IAAI,CAACS,IAAI,CAAC,CAAC,CAAGL,CAAC,CAAC,CAAC,CAExD,GAAM,CAAAM,WAAW,CAAG,IAAI,CAAE;AAC1B,GAAM,CAAAC,oBAAoB,CAAGD,WAAW,CAAGH,CAAC,CAC5C,GAAM,CAAAK,gBAAgB,CAAGD,oBAAoB,CAAG,IAAI,CAAE;AAEtD,GAAI,CAAAE,iBAAiB,CAErB,GAAID,gBAAgB,CAAG,IAAI,CAAE,CAC3B,GAAM,CAAAD,qBAAoB,CAAG,CAACC,gBAAgB,CAAG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAE;AACnED,iBAAiB,IAAA3B,MAAA,CAAMyB,qBAAoB,cAAY,CACzD,CAAC,IAAM,CACLE,iBAAiB,IAAA3B,MAAA,CAAMc,IAAI,CAACe,KAAK,CAACH,gBAAgB,CAAC,UAAQ,CAC7D,CAEAjD,WAAW,CAACkD,iBAAiB,CAAC,CAE9B,GAAIvD,GAAG,CAAC0D,YAAY,CAAE,CAClB1D,GAAG,CAAC0D,YAAY,CAAC3B,SAAS,CAAC,CAACO,SAAS,CAAEC,SAAS,CAAC,CAAC,CAClDvC,GAAG,CAAC0D,YAAY,CAAC1B,QAAQ,CAAC,CAAC,CAACC,UAAU,kBAAAL,MAAA,CAAkBU,SAAS,OAAAV,MAAA,CAAKW,SAAS,CAAE,CAAC,CACtF,CAAC,IAAM,CACH,GAAM,CAAAmB,YAAY,CAAGvE,CAAC,CAAC+C,MAAM,CAAC,CAACI,SAAS,CAAEC,SAAS,CAAC,CAAE,CAClDJ,IAAI,CAAEhD,CAAC,CAACsC,OAAO,CAAC,CACZC,SAAS,CAAE,eAAe,CAC1BC,IAAI,gCAAAC,MAAA,CAA+B,CAAC,UAAQ,CAC5CC,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CACrB,CAAC,CACL,CAAC,CAAC,CAACd,KAAK,CAACf,GAAG,CAAC,CACb0D,YAAY,CAACtB,SAAS,kBAAAR,MAAA,CAAkBU,SAAS,OAAAV,MAAA,CAAKW,SAAS,CAAE,CAAC,CAACF,SAAS,CAAC,CAAC,CAC9ErC,GAAG,CAAC0D,YAAY,CAAGA,YAAY,CACnC,CAEA,GAAI1D,GAAG,CAAC2D,IAAI,CAAE,CACV3D,GAAG,CAAC4D,WAAW,CAAC5D,GAAG,CAAC2D,IAAI,CAAC,CAC7B,CAEA,GAAM,CAAAA,IAAI,CAAGxE,CAAC,CAAC0E,QAAQ,CACnB,CACI,CAACzC,OAAO,CAAEE,OAAO,CAAC,CAClB,CAACgB,SAAS,CAAEC,SAAS,CAAC,CACzB,CACD,CACIuB,KAAK,CAAE,MACX,CACJ,CAAC,CAEDH,IAAI,CAAC5C,KAAK,CAACf,GAAG,CAAC,CACfA,GAAG,CAAC2D,IAAI,CAAGA,IAAI,CACnB,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAAC3D,GAAG,CAAEL,WAAW,CAAC,CAAC,CAEtBZ,SAAS,CAAC,UAAM,CACZ,MAAO,WAAM,CACT,GAAIiB,GAAG,CAAE,CACLA,GAAG,CAAC+D,MAAM,CAAC,CAAC,CAChB,CACJ,CAAC,CACL,CAAC,CAAE,CAAC/D,GAAG,CAAC,CAAC,CAET,mBACIR,KAAA,QAAAwE,QAAA,eACI1E,IAAA,QAAK2E,EAAE,CAAC,KAAK,CAACC,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAM,CAAC,cAChE9E,IAAA,SAAMoC,SAAS,CAAC,MAAM,CAAAsC,QAAA,CAAE5D,QAAQ,CAAO,CAAC,cACxCd,IAAA,UAAA0E,QAAA,yqBAsBO,CAAC,EACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAvE,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}