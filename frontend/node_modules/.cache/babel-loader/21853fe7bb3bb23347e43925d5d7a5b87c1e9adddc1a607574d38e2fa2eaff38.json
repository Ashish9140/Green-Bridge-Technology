{"ast":null,"code":"import _slicedToArray from\"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useContext,useState,useRef}from\"react\";import{CartContext}from\"../CartContext\";import L from\"leaflet\";import\"leaflet/dist/leaflet.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OSMMap=function OSMMap(){var _useContext=useContext(CartContext),coordinates=_useContext.coordinates;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var markersRef=useRef([]);// Function to update markers based on new coordinates\nvar updateMarkers=function updateMarkers(){if(map){markersRef.current.forEach(function(marker){map.removeLayer(marker);});markersRef.current=coordinates.map(function(point,index){var pointLatitude=parseFloat(point.lat);var pointLongitude=parseFloat(point.lng);if(!isNaN(pointLatitude)&&!isNaN(pointLongitude)){var customIcon=L.divIcon({className:\"custom-marker\",html:\"<div class=\\\"marker-label\\\">\".concat(index+1,\"</div>\"),iconSize:[30,30]});var marker=L.marker([pointLatitude,pointLongitude],{icon:customIcon});marker.addTo(map);return marker;}else{console.error(\"Invalid coordinates for point: \".concat(JSON.stringify(point)));return null;}});}};useEffect(function(){if(!map&&Array.isArray(coordinates)&&coordinates.length>0){var firstPoint=coordinates[0];var latitude=parseFloat(firstPoint.lat);var longitude=parseFloat(firstPoint.lng);if(!isNaN(latitude)&&!isNaN(longitude)){var osmMap=L.map(\"map\").setView([latitude,longitude],18);L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",{maxZoom:40}).addTo(osmMap);setMap(osmMap);}else{console.error(\"Invalid coordinates for first point: \".concat(JSON.stringify(firstPoint)));}}},[coordinates,map]);useEffect(function(){if(map){updateMarkers();// Update markers when coordinates change\n}},[coordinates,map]);useEffect(function(){return function(){if(map){map.remove();}};},[map]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"map\",style:{height:\"600px\",width:\"400px\"}}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n                .custom-marker {\\n                    display: flex;\\n                    justify-content: center;\\n                    align-items: center;\\n                    background-color: #007bff;\\n                    color: #fff;\\n                    border-radius: 50%;\\n                    width: 30px;\\n                    height: 30px;\\n                }\\n                .marker-label {\\n                    font-size: 14px;\\n                    font-weight: bold;\\n                }\\n                \"})]});};export default OSMMap;","map":{"version":3,"names":["React","useEffect","useContext","useState","useRef","CartContext","L","jsx","_jsx","jsxs","_jsxs","OSMMap","_useContext","coordinates","_useState","_useState2","_slicedToArray","map","setMap","markersRef","updateMarkers","current","forEach","marker","removeLayer","point","index","pointLatitude","parseFloat","lat","pointLongitude","lng","isNaN","customIcon","divIcon","className","html","concat","iconSize","icon","addTo","console","error","JSON","stringify","Array","isArray","length","firstPoint","latitude","longitude","osmMap","setView","tileLayer","maxZoom","remove","children","id","style","height","width"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/MapLine.js"],"sourcesContent":["import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport { CartContext } from \"../CartContext\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst OSMMap = () => {\r\n    const { coordinates } = useContext(CartContext);\r\n    const [map, setMap] = useState(null);\r\n    const markersRef = useRef([]);\r\n\r\n    // Function to update markers based on new coordinates\r\n    const updateMarkers = () => {\r\n        if (map) {\r\n            markersRef.current.forEach((marker) => {\r\n                map.removeLayer(marker);\r\n            });\r\n\r\n            markersRef.current = coordinates.map((point, index) => {\r\n                const pointLatitude = parseFloat(point.lat);\r\n                const pointLongitude = parseFloat(point.lng);\r\n\r\n                if (!isNaN(pointLatitude) && !isNaN(pointLongitude)) {\r\n                    const customIcon = L.divIcon({\r\n                        className: \"custom-marker\",\r\n                        html: `<div class=\"marker-label\">${index + 1}</div>`,\r\n                        iconSize: [30, 30],\r\n                    });\r\n\r\n                    const marker = L.marker([pointLatitude, pointLongitude], {\r\n                        icon: customIcon,\r\n                    });\r\n                    marker.addTo(map);\r\n                    return marker;\r\n                } else {\r\n                    console.error(`Invalid coordinates for point: ${JSON.stringify(point)}`);\r\n                    return null;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!map && Array.isArray(coordinates) && coordinates.length > 0) {\r\n            const firstPoint = coordinates[0];\r\n            const latitude = parseFloat(firstPoint.lat);\r\n            const longitude = parseFloat(firstPoint.lng);\r\n\r\n            if (!isNaN(latitude) && !isNaN(longitude)) {\r\n                const osmMap = L.map(\"map\").setView([latitude, longitude], 18);\r\n\r\n                L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n                    maxZoom: 40,\r\n                }).addTo(osmMap);\r\n\r\n                setMap(osmMap);\r\n            } else {\r\n                console.error(`Invalid coordinates for first point: ${JSON.stringify(firstPoint)}`);\r\n            }\r\n        }\r\n    }, [coordinates, map]);\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            updateMarkers(); // Update markers when coordinates change\r\n        }\r\n    }, [coordinates, map]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (map) {\r\n                map.remove();\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{ height: \"600px\", width: \"400px\" }}></div>\r\n            <style>\r\n                {`\r\n                .custom-marker {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    background-color: #007bff;\r\n                    color: #fff;\r\n                    border-radius: 50%;\r\n                    width: 30px;\r\n                    height: 30px;\r\n                }\r\n                .marker-label {\r\n                    font-size: 14px;\r\n                    font-weight: bold;\r\n                }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OSMMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}