{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/VideoWith.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport React from 'react';\nimport { CartContext } from '../CartContext';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoWith = () => {\n  _s();\n  const {\n    auth,\n    formatDate,\n    formatTime,\n    user,\n    baseURL,\n    alert,\n    setAlert,\n    setAlertTime\n  } = useContext(CartContext);\n  let duration = 0;\n  let interval, intervalLoc;\n  const handleClick = async () => {\n    await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).then(function (mediaStreamObj) {\n      console.log(user);\n\n      // assets\n      let videoWithAudio = document.querySelector(\".videoWithAudioCtr\");\n      let recordVideoWith = document.querySelector(\".videoWithAudio-sec-btn\");\n      let videoWithBtn = document.querySelector(\".video-rec-withAudio\");\n      let durationBtn = document.querySelector(\".videoWithAudio-duration\");\n\n      // buttons\n      let videoWithAudioPause = document.getElementById('videoWithAudiobtnPauseReco');\n      let videoWithAudioResume = document.getElementById('videoWithAudiobtnResumeReco');\n      let videoWithAudioStop = document.getElementById('videoWithAudiobtnStopReco');\n\n      // getting media tracks\n      let videoTrackWithAudio = mediaStreamObj.getTracks();\n      // Chunk array to store the audio data\n      let _recordedChunks = [];\n      videoWithAudio.srcObject = mediaStreamObj;\n      videoWithBtn.style.display = 'none';\n      recordVideoWith.style.display = 'flex';\n\n      // Setup timing\n      durationBtn.innerHTML = '00:00';\n      duration = 0;\n      runInterval();\n      let latitude = [],\n        longitude = [];\n      intervalLoc = setInterval(() => {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          let size = latitude.length;\n          let lt = pos.coords.latitude;\n          let ln = pos.coords.longitude;\n          console.log(lt, ln);\n          if (size !== 0) {\n            if (Math.abs(lt - latitude[size - 1]) > 0.0001 || Math.abs(ln - longitude[size - 1]) > 0.0001) {\n              latitude.push(lt);\n              longitude.push(ln);\n            }\n          } else {\n            latitude.push(lt);\n            longitude.push(ln);\n          }\n        });\n      }, 2000);\n\n      // setup media recorder \n      let mediaRecorder = new MediaRecorder(mediaStreamObj);\n\n      // Start event\n      mediaRecorder.start();\n      videoWithAudioPause.addEventListener('click', () => {\n        mediaRecorder.pause();\n      });\n      videoWithAudioResume.addEventListener('click', () => {\n        mediaRecorder.resume();\n      });\n      videoWithAudioStop.addEventListener('click', () => {\n        mediaRecorder.stop();\n      });\n\n      // If audio data available then push\n      // it to the chunk array\n      mediaRecorder.ondataavailable = function (e) {\n        if (e.data.size > 0) _recordedChunks.push(e.data);\n      };\n      mediaRecorder.onpause = async () => {\n        videoWithAudioPause.style.display = \"none\";\n        videoWithAudioResume.style.display = \"inline-block\";\n        clearInterval(interval);\n      };\n      mediaRecorder.onresume = async () => {\n        videoWithAudioResume.style.display = \"none\";\n        videoWithAudioPause.style.display = \"inline-block\";\n        videoWithAudioStop.style.display = \"inline-block\";\n        runInterval();\n      };\n\n      // Convert the audio data in to blob\n      // after stopping the recording\n      mediaRecorder.onstop = async function (ev) {\n        videoTrackWithAudio.forEach(track => {\n          track.stop();\n        });\n        // duration;\n        clearInterval(interval);\n        videoWithBtn.style.display = 'inline-block';\n        recordVideoWith.style.display = 'none';\n        var blob = new Blob(_recordedChunks, {\n          type: 'video/mp4'\n        });\n        let url = window.URL.createObjectURL(blob);\n        // take file input\n        let fileName = prompt(\"Enter file name\", \"my-video\");\n\n        // save audio file\n        let date = formatDate();\n        let time = formatTime();\n        clearInterval(intervalLoc);\n        for (let i = 0; i < latitude.length; i++) {\n          latitude[i] = latitude[i].toString();\n        }\n        for (let i = 0; i < longitude.length; i++) {\n          longitude[i] = longitude[i].toString();\n        }\n        const formData = new FormData();\n        formData.append(\"videowith\", blob);\n        formData.append(\"filename\", fileName);\n        formData.append(\"date\", date);\n        formData.append(\"time\", time);\n        if (latitude.length === 1) {\n          formData.append('latitude', '');\n        }\n        latitude.forEach((latitude, index) => {\n          formData.append('latitude', latitude);\n        });\n        if (latitude.length === 1) {\n          formData.append(\"longitude\", '');\n        }\n        longitude.forEach((longitude, index) => {\n          formData.append(\"longitude\", longitude);\n        });\n        console.log(latitude, longitude);\n        formData.append(\"duration\", duration);\n        formData.append(\"alias\", auth.user.alias);\n        formData.append(\"ip\", user.ip);\n        formData.append(\"iptype\", user.iptype);\n        formData.append(\"devicebrand\", user.device.brand);\n        formData.append(\"devicename\", user.device.name);\n        formData.append(\"devicetype\", user.device.type);\n        formData.append(\"searchname\", user.name);\n        formData.append(\"searchtype\", user.type);\n        formData.append(\"searchversion\", user.version);\n        formData.append(\"osname\", user.os.name);\n        formData.append(\"ostype\", user.os.type);\n        fetch(`${baseURL}/videowith`, {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          setAlert(true);\n          setAlertTime(2000);\n        });\n        videoWithAudio.srcObject = null;\n      };\n      function runInterval() {\n        interval = setInterval(() => {\n          duration++;\n          if (duration < 10) durationBtn.innerHTML = `00:0${duration}`;else if (duration < 60) durationBtn.innerHTML = `00:${duration}`;else durationBtn.innerHTML = `0${duration / 60}:${duration % 60}`;\n        }, 1000);\n      }\n    }).catch(function (err) {\n      console.log(err.name, err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoWithAudio-sec\",\n    children: [alert ? /*#__PURE__*/_jsxDEV(Alert, {\n      text: \"File Saved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 22\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Video With Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        muted: true,\n        className: \"videoWithAudioCtr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"video-rec-withAudio\",\n      onClick: handleClick,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoWithAudio-sec-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"videoWithAudio-duration duration\",\n        children: \"00:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithAudiobtnPauseReco\",\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithAudiobtnResumeReco\",\n        style: {\n          display: \"none\"\n        },\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithAudiobtnStopReco\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoWith, \"HV253E8uKkMkg0dnUQjZ4aQ0S28=\");\n_c = VideoWith;\nexport default VideoWith;\nvar _c;\n$RefreshReg$(_c, \"VideoWith\");","map":{"version":3,"names":["useContext","React","CartContext","Alert","jsxDEV","_jsxDEV","VideoWith","_s","auth","formatDate","formatTime","user","baseURL","alert","setAlert","setAlertTime","duration","interval","intervalLoc","handleClick","navigator","mediaDevices","getUserMedia","audio","video","then","mediaStreamObj","console","log","videoWithAudio","document","querySelector","recordVideoWith","videoWithBtn","durationBtn","videoWithAudioPause","getElementById","videoWithAudioResume","videoWithAudioStop","videoTrackWithAudio","getTracks","_recordedChunks","srcObject","style","display","innerHTML","runInterval","latitude","longitude","setInterval","geolocation","getCurrentPosition","pos","size","length","lt","coords","ln","Math","abs","push","mediaRecorder","MediaRecorder","start","addEventListener","pause","resume","stop","ondataavailable","e","data","onpause","clearInterval","onresume","onstop","ev","forEach","track","blob","Blob","type","url","window","URL","createObjectURL","fileName","prompt","date","time","i","toString","formData","FormData","append","index","alias","ip","iptype","device","brand","name","version","os","fetch","method","body","response","json","catch","err","message","className","children","text","_jsxFileName","lineNumber","columnNumber","autoPlay","muted","onClick","id","_c","$RefreshReg$"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/VideoWith.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport React from 'react'\r\nimport { CartContext } from '../CartContext';\r\nimport Alert from './Alert';\r\n\r\n\r\nconst VideoWith = () => {\r\n\r\n    const { auth, formatDate, formatTime, user, baseURL, alert, setAlert, setAlertTime } = useContext(CartContext);\r\n\r\n    let duration = 0;\r\n    let interval, intervalLoc;\r\n\r\n\r\n    const handleClick = async () => {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true, video: true })\r\n            .then(function (mediaStreamObj) {\r\n\r\n                console.log(user);\r\n\r\n                // assets\r\n                let videoWithAudio = document.querySelector(\".videoWithAudioCtr\");\r\n                let recordVideoWith = document.querySelector(\".videoWithAudio-sec-btn\");\r\n                let videoWithBtn = document.querySelector(\".video-rec-withAudio\");\r\n\r\n                let durationBtn = document.querySelector(\".videoWithAudio-duration\");\r\n\r\n                // buttons\r\n                let videoWithAudioPause = document.getElementById('videoWithAudiobtnPauseReco');\r\n                let videoWithAudioResume = document.getElementById('videoWithAudiobtnResumeReco');\r\n                let videoWithAudioStop = document.getElementById('videoWithAudiobtnStopReco');\r\n\r\n\r\n                // getting media tracks\r\n                let videoTrackWithAudio = mediaStreamObj.getTracks();\r\n                // Chunk array to store the audio data\r\n                let _recordedChunks = [];\r\n                videoWithAudio.srcObject = mediaStreamObj;\r\n                videoWithBtn.style.display = 'none';\r\n                recordVideoWith.style.display = 'flex';\r\n\r\n\r\n\r\n\r\n                // Setup timing\r\n                durationBtn.innerHTML = '00:00';\r\n                duration = 0;\r\n                runInterval();\r\n\r\n                let latitude = [], longitude = [];\r\n\r\n                intervalLoc = setInterval(() => {\r\n                    navigator.geolocation.getCurrentPosition(function (pos) {\r\n                        let size = latitude.length;\r\n                        let lt = pos.coords.latitude;\r\n                        let ln = pos.coords.longitude;\r\n                        console.log(lt, ln);\r\n                        if (size !== 0) {\r\n                            if (Math.abs(lt - latitude[size - 1]) > 0.0001 || Math.abs(ln - longitude[size - 1]) > 0.0001) {\r\n                                latitude.push(lt);\r\n                                longitude.push(ln);\r\n                            }\r\n                        } else {\r\n                            latitude.push(lt);\r\n                            longitude.push(ln);\r\n                        }\r\n                    })\r\n                }, 2000);\r\n\r\n\r\n                // setup media recorder \r\n                let mediaRecorder = new MediaRecorder(mediaStreamObj);\r\n\r\n                // Start event\r\n                mediaRecorder.start();\r\n                videoWithAudioPause.addEventListener('click', () => { mediaRecorder.pause(); });\r\n                videoWithAudioResume.addEventListener('click', () => { mediaRecorder.resume(); });\r\n                videoWithAudioStop.addEventListener('click', () => { mediaRecorder.stop(); });\r\n\r\n                // If audio data available then push\r\n                // it to the chunk array\r\n                mediaRecorder.ondataavailable = function (e) {\r\n                    if (e.data.size > 0)\r\n                        _recordedChunks.push(e.data);\r\n                }\r\n                mediaRecorder.onpause = async () => {\r\n                    videoWithAudioPause.style.display = \"none\";\r\n                    videoWithAudioResume.style.display = \"inline-block\";\r\n                    clearInterval(interval);\r\n                };\r\n                mediaRecorder.onresume = async () => {\r\n                    videoWithAudioResume.style.display = \"none\";\r\n                    videoWithAudioPause.style.display = \"inline-block\";\r\n                    videoWithAudioStop.style.display = \"inline-block\";\r\n                    runInterval();\r\n                };\r\n\r\n                // Convert the audio data in to blob\r\n                // after stopping the recording\r\n                mediaRecorder.onstop = async function (ev) {\r\n                    videoTrackWithAudio.forEach((track) => {\r\n                        track.stop();\r\n                    });\r\n                    // duration;\r\n                    clearInterval(interval);\r\n                    videoWithBtn.style.display = 'inline-block';\r\n                    recordVideoWith.style.display = 'none';\r\n                    var blob = new Blob(_recordedChunks, { type: 'video/mp4' });\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    // take file input\r\n                    let fileName = prompt(\"Enter file name\", \"my-video\");\r\n\r\n                    // save audio file\r\n                    let date = formatDate();\r\n                    let time = formatTime();\r\n\r\n                    clearInterval(intervalLoc);\r\n\r\n                    for (let i = 0; i < latitude.length; i++) {\r\n                        latitude[i] = latitude[i].toString();\r\n                    }\r\n                    for (let i = 0; i < longitude.length; i++) {\r\n                        longitude[i] = longitude[i].toString();\r\n                    }\r\n\r\n\r\n\r\n\r\n                    const formData = new FormData();\r\n                    formData.append(\"videowith\", blob);\r\n                    formData.append(\"filename\", fileName);\r\n                    formData.append(\"date\", date);\r\n                    formData.append(\"time\", time);\r\n\r\n                    if (latitude.length === 1) {\r\n                        formData.append('latitude', '');\r\n                    }\r\n                    latitude.forEach((latitude, index) => {\r\n                        formData.append('latitude', latitude);\r\n                    });\r\n\r\n\r\n                    if (latitude.length === 1) {\r\n                        formData.append(\"longitude\", '');\r\n                    }\r\n                    longitude.forEach((longitude, index) => {\r\n                        formData.append(\"longitude\", longitude);\r\n                    });\r\n\r\n                    console.log(latitude,longitude)\r\n\r\n                    formData.append(\"duration\", duration);\r\n                    formData.append(\"alias\", auth.user.alias);\r\n\r\n                    formData.append(\"ip\", user.ip);\r\n                    formData.append(\"iptype\", user.iptype);\r\n                    formData.append(\"devicebrand\", user.device.brand);\r\n                    formData.append(\"devicename\", user.device.name);\r\n                    formData.append(\"devicetype\", user.device.type);\r\n                    formData.append(\"searchname\", user.name);\r\n                    formData.append(\"searchtype\", user.type);\r\n                    formData.append(\"searchversion\", user.version);\r\n                    formData.append(\"osname\", user.os.name);\r\n                    formData.append(\"ostype\", user.os.type);\r\n\r\n                    fetch(`${baseURL}/videowith`, {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    }).then((response) => response.json())\r\n                        .then((data) => {\r\n                            console.log(data);\r\n                            setAlert(true);\r\n                            setAlertTime(2000);\r\n                        });\r\n\r\n                    videoWithAudio.srcObject = null;\r\n                }\r\n\r\n                function runInterval() {\r\n                    interval = setInterval(() => {\r\n                        duration++;\r\n                        if (duration < 10)\r\n                            durationBtn.innerHTML = `00:0${duration}`;\r\n                        else if (duration < 60)\r\n                            durationBtn.innerHTML = `00:${duration}`;\r\n                        else\r\n                            durationBtn.innerHTML = `0${duration / 60}:${duration % 60}`;\r\n\r\n                    }, 1000);\r\n                }\r\n            })\r\n\r\n            .catch(function (err) {\r\n                console.log(err.name, err.message);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"videoWithAudio-sec\">\r\n            {alert ? <Alert text=\"File Saved\" /> : \"\"}\r\n            <h3>Video With Audio</h3>\r\n            <div>\r\n                <video autoPlay muted className=\"videoWithAudioCtr\"></video>\r\n            </div>\r\n            <button className=\"video-rec-withAudio\" onClick={handleClick}>Start</button>\r\n            <div className=\"videoWithAudio-sec-btn\">\r\n                <span className=\"videoWithAudio-duration duration\">00:00</span>\r\n                <button id=\"videoWithAudiobtnPauseReco\">Pause</button>\r\n                <button id=\"videoWithAudiobtnResumeReco\" style={{ display: \"none\" }}>Resume</button>\r\n                <button id=\"videoWithAudiobtnStopReco\">Stop</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoWith"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}