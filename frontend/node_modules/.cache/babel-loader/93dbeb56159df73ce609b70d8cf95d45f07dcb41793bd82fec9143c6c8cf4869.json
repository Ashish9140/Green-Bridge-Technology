{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/VideoWithout.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport React from 'react';\nimport { CartContext } from '../CartContext';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoWithout = () => {\n  _s();\n  const {\n    auth,\n    formatDate,\n    formatTime,\n    user,\n    baseURL,\n    alert,\n    setAlert,\n    setAlertTime\n  } = useContext(CartContext);\n  let duration = 0;\n  let interval, intervalLoc;\n  const handleClick = async () => {\n    await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: true\n    }).then(function (mediaStreamObj) {\n      // assets\n      let videoWithoutAudio = document.querySelector(\".videoWithoutAudioCtr\");\n      let recordVideoWithout = document.querySelector(\".videoWithoutAudio-sec-btn\");\n      let videoWithoutBtn = document.querySelector(\".video-rec-withoutAudio\");\n      let durationBtn = document.querySelector(\".videoWithoutAudio-duration\");\n\n      // buttons\n      let videoPause = document.getElementById('videoWithoutAudiobtnPauseReco');\n      let videoResume = document.getElementById('videoWithoutAudiobtnResumeReco');\n      let videoStop = document.getElementById('videoWithoutAudiobtnStopReco');\n      videoResume.style.display = \"none\";\n      videoPause.style.display = \"inline-block\";\n      videoStop.style.display = \"inline-block\";\n\n      // getting media tracks\n      let videoTrackWithoutAudio = mediaStreamObj.getTracks();\n      // Chunk array to store the audio data\n      let _recordedChunks = [];\n      videoWithoutAudio.srcObject = mediaStreamObj;\n      videoWithoutBtn.style.display = \"none\";\n      recordVideoWithout.style.display = \"flex\";\n\n      // setup media recorder \n      let mediaRecorder = new MediaRecorder(mediaStreamObj);\n\n      // setting time\n      durationBtn.innerHTML = '00:00';\n      duration = 0;\n      runInterval();\n      let latitude = [],\n        longitude = [];\n      intervalLoc = setInterval(() => {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          let size = latitude.length;\n          let lt = pos.coords.latitude;\n          let ln = pos.coords.longitude;\n          // console.log(lt, ln);\n          if (size !== 0) {\n            if (Math.abs(lt - latitude[size - 1]) > 0.0001 || Math.abs(ln - longitude[size - 1]) > 0.0001) {\n              latitude.push(lt);\n              longitude.push(ln);\n            }\n          } else {\n            latitude.push(lt);\n            longitude.push(ln);\n          }\n        });\n      }, 2000);\n\n      // Start event\n      mediaRecorder.start();\n      videoPause.addEventListener('click', () => {\n        mediaRecorder.pause();\n      });\n      videoResume.addEventListener('click', () => {\n        mediaRecorder.resume();\n      });\n      videoStop.addEventListener('click', () => {\n        mediaRecorder.stop();\n      });\n\n      // If audio data available then push\n      // it to the chunk array\n      mediaRecorder.ondataavailable = function (e) {\n        if (e.data.size > 0) _recordedChunks.push(e.data);\n      };\n      mediaRecorder.onpause = async () => {\n        videoPause.style.display = \"none\";\n        videoResume.style.display = \"inline-block\";\n        clearInterval(interval);\n      };\n      mediaRecorder.onresume = async () => {\n        videoResume.style.display = \"none\";\n        videoPause.style.display = \"inline-block\";\n        videoStop.style.display = \"inline-block\";\n        runInterval();\n      };\n\n      // Convert the audio data in to blob\n      // after stopping the recording\n      mediaRecorder.onstop = async function (ev) {\n        videoTrackWithoutAudio.forEach(track => {\n          track.stop();\n        });\n        clearInterval(interval);\n        videoWithoutBtn.style.display = \"inline-block\";\n        recordVideoWithout.style.display = \"none\";\n        var blob = new Blob(_recordedChunks, {\n          type: 'video/mp4'\n        });\n        let url = window.URL.createObjectURL(blob);\n        // take file input\n        let fileName = prompt(\"Enter file name\", \"my-video\");\n\n        // console.log(blob, _recordedChunks, url);\n\n        // save audio file\n        let date = formatDate();\n        let time = formatTime();\n        clearInterval(intervalLoc);\n        for (let i = 0; i < latitude.length; i++) {\n          latitude[i] = latitude[i].toString();\n        }\n        for (let i = 0; i < longitude.length; i++) {\n          longitude[i] = longitude[i].toString();\n        }\n        const formData = new FormData();\n        formData.append(\"videowithout\", blob);\n        formData.append(\"filename\", fileName);\n        formData.append(\"date\", date);\n        formData.append(\"time\", time);\n\n        // appendin location into form data\n        if (latitude.length === 1) {\n          formData.append('latitude', '');\n        }\n        latitude.forEach((latitude, index) => {\n          formData.append('latitude', latitude);\n        });\n        if (latitude.length === 1) {\n          formData.append(\"longitude\", '');\n        }\n        longitude.forEach((longitude, index) => {\n          formData.append(\"longitude\", longitude);\n        });\n        formData.append(\"duration\", duration);\n        formData.append(\"alias\", auth.user.alias);\n        formData.append(\"ip\", user.ip);\n        formData.append(\"iptype\", user.iptype);\n        formData.append(\"devicebrand\", user.device.brand);\n        formData.append(\"devicename\", user.device.name);\n        formData.append(\"devicetype\", user.device.type);\n        formData.append(\"searchname\", user.name);\n        formData.append(\"searchtype\", user.type);\n        formData.append(\"searchversion\", user.version);\n        formData.append(\"osname\", user.os.name);\n        formData.append(\"ostype\", user.os.type);\n        fetch(`${baseURL}/videowithout`, {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          setAlert(true);\n          setAlertTime(2000);\n        });\n        videoWithoutAudio.srcObject = null;\n      };\n      function runInterval() {\n        interval = setInterval(() => {\n          duration++;\n          if (duration < 10) durationBtn.innerHTML = `00:0${duration}`;else if (duration < 60) durationBtn.innerHTML = `00:${duration}`;else durationBtn.innerHTML = `0${duration / 60}:${duration % 60}`;\n        }, 1000);\n      }\n    })\n\n    // If any error occurs then handles the error\n    .catch(function (err) {\n      console.log(err.name, err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoWithoutAudio-sec\",\n    children: [\"//\", alert ? /*#__PURE__*/_jsxDEV(Alert, {\n      text: \"File Saved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 24\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Video Without Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-record\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        muted: true,\n        className: \"videoWithoutAudioCtr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"video-rec-withoutAudio\",\n      onClick: handleClick,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoWithoutAudio-sec-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"videoWithoutAudio-duration duration\",\n        children: \"00:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithoutAudiobtnPauseReco\",\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithoutAudiobtnResumeReco\",\n        style: {\n          display: \"none\"\n        },\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"videoWithoutAudiobtnStopReco\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoWithout, \"HV253E8uKkMkg0dnUQjZ4aQ0S28=\");\n_c = VideoWithout;\nexport default VideoWithout;\nvar _c;\n$RefreshReg$(_c, \"VideoWithout\");","map":{"version":3,"names":["useContext","React","CartContext","Alert","jsxDEV","_jsxDEV","VideoWithout","_s","auth","formatDate","formatTime","user","baseURL","alert","setAlert","setAlertTime","duration","interval","intervalLoc","handleClick","navigator","mediaDevices","getUserMedia","audio","video","then","mediaStreamObj","videoWithoutAudio","document","querySelector","recordVideoWithout","videoWithoutBtn","durationBtn","videoPause","getElementById","videoResume","videoStop","style","display","videoTrackWithoutAudio","getTracks","_recordedChunks","srcObject","mediaRecorder","MediaRecorder","innerHTML","runInterval","latitude","longitude","setInterval","geolocation","getCurrentPosition","pos","size","length","lt","coords","ln","Math","abs","push","start","addEventListener","pause","resume","stop","ondataavailable","e","data","onpause","clearInterval","onresume","onstop","ev","forEach","track","blob","Blob","type","url","window","URL","createObjectURL","fileName","prompt","date","time","i","toString","formData","FormData","append","index","alias","ip","iptype","device","brand","name","version","os","fetch","method","body","response","json","console","log","catch","err","message","className","children","text","_jsxFileName","lineNumber","columnNumber","autoPlay","muted","onClick","id","_c","$RefreshReg$"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/VideoWithout.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport React from 'react'\r\nimport { CartContext } from '../CartContext';\r\nimport Alert from './Alert';\r\n\r\nconst VideoWithout = () => {\r\n\r\n    const { auth, formatDate, formatTime, user, baseURL, alert, setAlert, setAlertTime } = useContext(CartContext);\r\n\r\n    let duration = 0;\r\n    let interval, intervalLoc;\r\n\r\n\r\n    const handleClick = async () => {\r\n        await navigator.mediaDevices.getUserMedia({ audio: false, video: true })\r\n            .then(function (mediaStreamObj) {\r\n\r\n \r\n                // assets\r\n                let videoWithoutAudio = document.querySelector(\".videoWithoutAudioCtr\");\r\n                let recordVideoWithout = document.querySelector(\".videoWithoutAudio-sec-btn\");\r\n                let videoWithoutBtn = document.querySelector(\".video-rec-withoutAudio\");\r\n                let durationBtn = document.querySelector(\".videoWithoutAudio-duration\");\r\n\r\n                // buttons\r\n                let videoPause = document.getElementById('videoWithoutAudiobtnPauseReco');\r\n                let videoResume = document.getElementById('videoWithoutAudiobtnResumeReco');\r\n                let videoStop = document.getElementById('videoWithoutAudiobtnStopReco');\r\n\r\n                videoResume.style.display = \"none\";\r\n                videoPause.style.display = \"inline-block\";\r\n                videoStop.style.display = \"inline-block\";\r\n\r\n                // getting media tracks\r\n                let videoTrackWithoutAudio = mediaStreamObj.getTracks();\r\n                // Chunk array to store the audio data\r\n                let _recordedChunks = [];\r\n                videoWithoutAudio.srcObject = mediaStreamObj;\r\n                videoWithoutBtn.style.display = \"none\";\r\n                recordVideoWithout.style.display = \"flex\";\r\n\r\n                // setup media recorder \r\n                let mediaRecorder = new MediaRecorder(mediaStreamObj);\r\n\r\n                // setting time\r\n                durationBtn.innerHTML = '00:00';\r\n                duration = 0;\r\n                runInterval();\r\n\r\n                let latitude = [], longitude = [];\r\n\r\n                intervalLoc = setInterval(() => {\r\n                    navigator.geolocation.getCurrentPosition(function (pos) {\r\n                        let size = latitude.length;\r\n                        let lt = pos.coords.latitude;\r\n                        let ln = pos.coords.longitude;\r\n                        // console.log(lt, ln);\r\n                        if (size !== 0) {\r\n                            if (Math.abs(lt - latitude[size - 1]) > 0.0001 || Math.abs(ln - longitude[size - 1]) > 0.0001) {\r\n                                latitude.push(lt);\r\n                                longitude.push(ln);\r\n                            }\r\n                        } else {\r\n                            latitude.push(lt);\r\n                            longitude.push(ln);\r\n                        }\r\n                    })\r\n                }, 2000);\r\n\r\n                // Start event\r\n                mediaRecorder.start();\r\n                videoPause.addEventListener('click', () => { mediaRecorder.pause(); });\r\n                videoResume.addEventListener('click', () => { mediaRecorder.resume(); });\r\n                videoStop.addEventListener('click', () => { mediaRecorder.stop(); });\r\n\r\n                // If audio data available then push\r\n                // it to the chunk array\r\n                mediaRecorder.ondataavailable = function (e) {\r\n                    if (e.data.size > 0)\r\n                        _recordedChunks.push(e.data);\r\n                }\r\n                mediaRecorder.onpause = async () => {\r\n                    videoPause.style.display = \"none\";\r\n                    videoResume.style.display = \"inline-block\";\r\n                    clearInterval(interval);\r\n                };\r\n                mediaRecorder.onresume = async () => {\r\n                    videoResume.style.display = \"none\";\r\n                    videoPause.style.display = \"inline-block\";\r\n                    videoStop.style.display = \"inline-block\";\r\n                    runInterval();\r\n                };\r\n\r\n                // Convert the audio data in to blob\r\n                // after stopping the recording\r\n                mediaRecorder.onstop = async function (ev) {\r\n                    videoTrackWithoutAudio.forEach((track) => {\r\n                        track.stop();\r\n                    });\r\n                    clearInterval(interval);\r\n                    videoWithoutBtn.style.display = \"inline-block\";\r\n                    recordVideoWithout.style.display = \"none\";\r\n                    var blob = new Blob(_recordedChunks, { type: 'video/mp4' });\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    // take file input\r\n                    let fileName = prompt(\"Enter file name\", \"my-video\");\r\n\r\n                    // console.log(blob, _recordedChunks, url);\r\n\r\n                    // save audio file\r\n                    let date = formatDate();\r\n                    let time = formatTime();\r\n\r\n                    clearInterval(intervalLoc);\r\n\r\n                    for (let i = 0; i < latitude.length; i++) {\r\n                        latitude[i] = latitude[i].toString();\r\n                    }\r\n                    for (let i = 0; i < longitude.length; i++) {\r\n                        longitude[i] = longitude[i].toString();\r\n                    }\r\n\r\n                    const formData = new FormData();\r\n                    formData.append(\"videowithout\", blob);\r\n                    formData.append(\"filename\", fileName);\r\n                    formData.append(\"date\", date);\r\n                    formData.append(\"time\", time);\r\n\r\n                    \r\n                    // appendin location into form data\r\n                    if (latitude.length === 1) {\r\n                        formData.append('latitude', '');\r\n                    }\r\n                    latitude.forEach((latitude, index) => {\r\n                        formData.append('latitude', latitude);\r\n                    });\r\n                    if (latitude.length === 1) {\r\n                        formData.append(\"longitude\", '');\r\n                    }\r\n                    longitude.forEach((longitude, index) => {\r\n                        formData.append(\"longitude\", longitude);\r\n                    });\r\n\r\n                    \r\n                    formData.append(\"duration\", duration);\r\n                    formData.append(\"alias\", auth.user.alias);\r\n                    formData.append(\"ip\", user.ip);\r\n                    formData.append(\"iptype\", user.iptype);\r\n                    formData.append(\"devicebrand\", user.device.brand);\r\n                    formData.append(\"devicename\", user.device.name);\r\n                    formData.append(\"devicetype\", user.device.type);\r\n                    formData.append(\"searchname\", user.name);\r\n                    formData.append(\"searchtype\", user.type);\r\n                    formData.append(\"searchversion\", user.version);\r\n                    formData.append(\"osname\", user.os.name);\r\n                    formData.append(\"ostype\", user.os.type);\r\n\r\n                    fetch(`${baseURL}/videowithout`, {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    }).then((response) => response.json())\r\n                        .then((data) => {\r\n                            console.log(data);\r\n                            setAlert(true);\r\n                            setAlertTime(2000);\r\n                        });\r\n\r\n                    videoWithoutAudio.srcObject = null;\r\n                }\r\n\r\n                function runInterval() {\r\n                    interval = setInterval(() => {\r\n                        duration++;\r\n                        if (duration < 10)\r\n                            durationBtn.innerHTML = `00:0${duration}`;\r\n                        else if (duration < 60)\r\n                            durationBtn.innerHTML = `00:${duration}`;\r\n                        else\r\n                            durationBtn.innerHTML = `0${duration / 60}:${duration % 60}`;\r\n\r\n                    }, 1000);\r\n                }\r\n            })\r\n\r\n            // If any error occurs then handles the error\r\n            .catch(function (err) {\r\n                console.log(err.name, err.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"videoWithoutAudio-sec\">\r\n            //{alert ? <Alert text=\"File Saved\" /> : \"\"}\r\n            <h3>Video Without Audio</h3>\r\n            <div className=\"inner-record\">\r\n                <video autoPlay muted className=\"videoWithoutAudioCtr\"></video>\r\n            </div>\r\n            <button className=\"video-rec-withoutAudio\" onClick={handleClick}>Start</button>\r\n            <div className=\"videoWithoutAudio-sec-btn\">\r\n                <span className=\"videoWithoutAudio-duration duration\">00:00</span>\r\n                <button id=\"videoWithoutAudiobtnPauseReco\">Pause</button>\r\n                <button id=\"videoWithoutAudiobtnResumeReco\" style={{ display: \"none\" }}>Resume</button>\r\n                <button id=\"videoWithoutAudiobtnStopReco\">Stop</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoWithout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}