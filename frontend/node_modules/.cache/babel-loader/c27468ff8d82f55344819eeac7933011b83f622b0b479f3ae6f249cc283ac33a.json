{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { CartContext } from \"../CartContext\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport haversine from \"haversine-distance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OSMMap = () => {\n  _s();\n  const {\n    targetpoint\n  } = useContext(CartContext);\n  const [map, setMap] = useState(null);\n  const [distance, setDistance] = useState(null);\n  useEffect(() => {\n    console.log(distance);\n  }, [distance]);\n  useEffect(() => {\n    const latitude = parseFloat(targetpoint.latitude);\n    const longitude = parseFloat(targetpoint.longitude);\n    if (!map) {\n      const osmMap = L.map(\"map\").setView([latitude, longitude], 18);\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 40\n      }).addTo(osmMap);\n      setMap(osmMap);\n    } else {\n      map.setView([latitude, longitude], 20);\n    }\n  }, [targetpoint, map]);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n        const userLocation = {\n          latitude: userLat,\n          longitude: userLng\n        };\n        const customIcon = L.divIcon({\n          className: \"custom-marker\",\n          html: `<div class=\"marker-label\">${2}</div>`,\n          iconSize: [30, 30]\n        });\n        if (map) {\n          if (map.userMarker) {\n            map.userMarker.setLatLng([userLat, userLng]);\n            map.userMarker.getPopup().setContent(`Current Point: ${userLat}, ${userLng}`);\n          } else {\n            const userMarker = L.marker([userLat, userLng], {\n              icon: L.divIcon({\n                className: \"custom-marker\",\n                html: `<div class=\"marker-label\">${2}</div>`,\n                iconSize: [30, 30]\n              })\n            }).addTo(map);\n            userMarker.bindPopup(`Current Point: ${userLat}, ${userLng}`).openPopup();\n            map.userMarker = userMarker;\n          }\n          const targetLat = parseFloat(targetpoint.latitude);\n          const targetLng = parseFloat(targetpoint.longitude);\n          const targetLocation = {\n            latitude: targetLat,\n            longitude: targetLng\n          };\n          const distance = Math.sqrt(Math.pow(userLat - targetLat, 2) + Math.pow(userLng - targetLng, 2));\n          setDistance(distance);\n          if (map.targetMarker) {\n            map.targetMarker.setLatLng([targetLat, targetLng]);\n            map.targetMarker.getPopup().setContent(`Target Point: ${targetLat}, ${targetLng}`);\n          } else {\n            const targetMarker = L.marker([targetLat, targetLng], {\n              icon: L.divIcon({\n                className: \"custom-marker\",\n                html: `<div class=\"marker-label\">${1}</div>`,\n                iconSize: [30, 30]\n              })\n            }).addTo(map);\n            targetMarker.bindPopup(`Target Point: ${targetLat}, ${targetLng}`).openPopup();\n            map.targetMarker = targetMarker;\n          }\n          if (map.line) {\n            map.removeLayer(map.line);\n          }\n          const line = L.polyline([[userLat, userLng], [targetLat, targetLng]], {\n            color: \"blue\"\n          });\n          line.addTo(map);\n          map.line = line;\n        }\n      });\n    }\n  }, [map, targetpoint]);\n  useEffect(() => {\n    return () => {\n      if (map) {\n        map.remove();\n      }\n    };\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"600px\",\n        width: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .custom-marker {\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    background-color: #007bff;\n                    color: #fff;\n                    border-radius: 50%;\n                    width: 30px;\n                    height: 30px;\n                }\n                .marker-label {\n                    font-size: 14px;\n                    font-weight: bold;\n                }\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(OSMMap, \"1KXMOfXJ0XHrGWB5MCuNLxqcegc=\");\n_c = OSMMap;\nexport default OSMMap;\nvar _c;\n$RefreshReg$(_c, \"OSMMap\");","map":{"version":3,"names":["React","useEffect","useContext","useState","CartContext","L","haversine","jsxDEV","_jsxDEV","OSMMap","_s","targetpoint","map","setMap","distance","setDistance","console","log","latitude","parseFloat","longitude","osmMap","setView","tileLayer","maxZoom","addTo","navigator","geolocation","getCurrentPosition","position","userLat","coords","userLng","userLocation","customIcon","divIcon","className","html","iconSize","userMarker","setLatLng","getPopup","setContent","marker","icon","bindPopup","openPopup","targetLat","targetLng","targetLocation","Math","sqrt","pow","targetMarker","line","removeLayer","polyline","color","remove","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashishkumar/Desktop/Labs Co/Resume Projects/Smart Snapper/frontend/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { CartContext } from \"../CartContext\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport haversine from \"haversine-distance\";\r\n\r\nconst OSMMap = () => {\r\n    const { targetpoint } = useContext(CartContext);\r\n    const [map, setMap] = useState(null);\r\n    const [distance, setDistance] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(distance);\r\n    }, [distance])\r\n\r\n    useEffect(() => {\r\n        const latitude = parseFloat(targetpoint.latitude);\r\n        const longitude = parseFloat(targetpoint.longitude);\r\n\r\n        if (!map) {\r\n            const osmMap = L.map(\"map\").setView([latitude, longitude], 18);\r\n\r\n            L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n                maxZoom: 40,\r\n            }).addTo(osmMap);\r\n\r\n            setMap(osmMap);\r\n        } else {\r\n            map.setView([latitude, longitude], 20);\r\n        }\r\n    }, [targetpoint, map]);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const userLat = position.coords.latitude;\r\n                const userLng = position.coords.longitude;\r\n                const userLocation = { latitude: userLat, longitude: userLng };\r\n\r\n                const customIcon = L.divIcon({\r\n                    className: \"custom-marker\",\r\n                    html: `<div class=\"marker-label\">${2}</div>`,\r\n                    iconSize: [30, 30],\r\n                });\r\n\r\n                if (map) {\r\n                    if (map.userMarker) {\r\n                        map.userMarker.setLatLng([userLat, userLng]);\r\n                        map.userMarker.getPopup().setContent(`Current Point: ${userLat}, ${userLng}`);\r\n                    } else {\r\n                        const userMarker = L.marker([userLat, userLng], {\r\n                            icon: L.divIcon({\r\n                                className: \"custom-marker\",\r\n                                html: `<div class=\"marker-label\">${2}</div>`,\r\n                                iconSize: [30, 30],\r\n                            }),\r\n                        }).addTo(map);\r\n                        userMarker.bindPopup(`Current Point: ${userLat}, ${userLng}`).openPopup();\r\n                        map.userMarker = userMarker;\r\n                    }\r\n\r\n                    const targetLat = parseFloat(targetpoint.latitude);\r\n                    const targetLng = parseFloat(targetpoint.longitude);\r\n                    const targetLocation = { latitude: targetLat, longitude: targetLng };\r\n\r\n\r\n                    const distance = Math.sqrt(\r\n                        Math.pow(userLat - targetLat, 2) + Math.pow(userLng - targetLng, 2)\r\n                      );\r\n                      \r\n                      setDistance(distance);\r\n\r\n                    if (map.targetMarker) {\r\n                        map.targetMarker.setLatLng([targetLat, targetLng]);\r\n                        map.targetMarker.getPopup().setContent(`Target Point: ${targetLat}, ${targetLng}`);\r\n                    } else {\r\n                        const targetMarker = L.marker([targetLat, targetLng], {\r\n                            icon: L.divIcon({\r\n                                className: \"custom-marker\",\r\n                                html: `<div class=\"marker-label\">${1}</div>`,\r\n                                iconSize: [30, 30],\r\n                            }),\r\n                        }).addTo(map);\r\n                        targetMarker.bindPopup(`Target Point: ${targetLat}, ${targetLng}`).openPopup();\r\n                        map.targetMarker = targetMarker;\r\n                    }\r\n\r\n                    if (map.line) {\r\n                        map.removeLayer(map.line);\r\n                    }\r\n\r\n                    const line = L.polyline(\r\n                        [\r\n                            [userLat, userLng],\r\n                            [targetLat, targetLng],\r\n                        ],\r\n                        {\r\n                            color: \"blue\",\r\n                        }\r\n                    );\r\n\r\n                    line.addTo(map);\r\n                    map.line = line;\r\n                }\r\n            });\r\n        }\r\n    }, [map, targetpoint]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (map) {\r\n                map.remove();\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{ height: \"600px\", width: \"400px\" }}></div>\r\n            <style>\r\n                {`\r\n                .custom-marker {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    background-color: #007bff;\r\n                    color: #fff;\r\n                    border-radius: 50%;\r\n                    width: 30px;\r\n                    height: 30px;\r\n                }\r\n                .marker-label {\r\n                    font-size: 14px;\r\n                    font-weight: bold;\r\n                }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OSMMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}